
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shobhit
 */
public class CustomObserver extends javax.swing.JFrame implements Observer {

    private Portfolio portfolio;
    /**
     * Creates new form CustomObserver
     */
    
    public CustomObserver() {
    }
    
    public CustomObserver(Portfolio portfolio) {
        initComponents();
        this.portfolio = portfolio;
        addAvailableStocksInComboBox();
        setResizable(false);
    }

    private void addAvailableStocksInComboBox() {
        Set<String> symbols = portfolio.getSymbols();
        for(String symbol : symbols){
            Stock stock = portfolio.getStock(symbol);
            availableStockComboBox.addItem(symbol + ", " + stock.getCompanyName());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        availableStockComboBox = new javax.swing.JComboBox();
        currentPriceCheckBox = new javax.swing.JCheckBox();
        bidPriceCheckBox = new javax.swing.JCheckBox();
        lineGraphCheckBox = new javax.swing.JCheckBox();
        barGraphCheckBox = new javax.swing.JCheckBox();
        statusCheckBox = new javax.swing.JCheckBox();
        doneButton = new javax.swing.JButton();
        lowerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Custom Observer");

        currentPriceCheckBox.setText("Current Price");

        bidPriceCheckBox.setText("Current Bid Price");

        lineGraphCheckBox.setText("Line Graph");

        barGraphCheckBox.setText("Bar Graph");

        statusCheckBox.setText("Status");

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(availableStockComboBox, 0, 377, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentPriceCheckBox)
                            .addComponent(lineGraphCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bidPriceCheckBox)
                            .addComponent(barGraphCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doneButton)
                            .addComponent(statusCheckBox))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(availableStockComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentPriceCheckBox)
                    .addComponent(bidPriceCheckBox)
                    .addComponent(statusCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lineGraphCheckBox)
                    .addComponent(barGraphCheckBox)
                    .addComponent(doneButton))
                .addGap(10, 10, 10))
        );

        lowerPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Current Price");
        jLabel1.setVisible(false);

        jLabel2.setText("Bid Price");
        jLabel2.setVisible(false);

        jLabel3.setText("Status");
        jLabel3.setVisible(false);

        jLabel4.setText("Current Price Value");
        jLabel4.setVisible(false);

        jLabel5.setText("Bid Price Value");
        jLabel5.setVisible(false);

        jLabel6.setText("Status Value");
        jLabel6.setVisible(false);

        javax.swing.GroupLayout lowerPanelLayout = new javax.swing.GroupLayout(lowerPanel);
        lowerPanel.setLayout(lowerPanelLayout);
        lowerPanelLayout.setHorizontalGroup(
            lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lowerPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowerPanelLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(91, 91, 91))
                        .addGroup(lowerPanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(116, 116, 116)))
                    .addGroup(lowerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(130, 130, 130)))
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        lowerPanelLayout.setVerticalGroup(
            lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lowerPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        String selectedItem = availableStockComboBox.getSelectedItem().toString();
        // If the subject is changed, frame should be removed from the observer and frame should subscribe to new stock.
        
        String symbol = selectedItem.split(",")[0];
        Stock stock = portfolio.getStock(symbol);
        stock.addObserver(this);
        
        if(currentPriceCheckBox.isSelected()){
            //panelDecorator = new CurrentPriceDecorator(panelDecorator);
            jLabel1.setVisible(true);
            jLabel4.setVisible(true);
        }
        
        if(bidPriceCheckBox.isSelected()){
            jLabel2.setVisible(true);
            jLabel5.setVisible(true);
        }
        
        if(statusCheckBox.isSelected()){
            jLabel3.setVisible(true);
            jLabel6.setVisible(true);
        }

        if(lineGraphCheckBox.isSelected()){
            ChartFrame chartFrame = new ChartFrame(new LineChartCreator());
            Thread thread = new Thread(chartFrame);
            thread.start();
            stock.addObserver(chartFrame);
        }
        
        
        //panel = panelDecorator.decoratePanel();
        
        //lowerPanel.add(panel);
        //lowerPanel.repaint();
        //lowerPanel.revalidate();
        
        
//        ChartCreator creator1 = new BarChartCreator();
//        ChartDecorator decorator1 = new BarChartDecorator();
//        JFreeChart chart1 = creator1.createChart(new ArrayList<Integer>());
//        decorator1.decorateChart(chart1);
//        decorator.createChartPanel(new ArrayList<Integer>());
//        
//        ChartDecorator d1 = new BarChartDecorator();
//        d1.createChartPanel(new ArrayList<Integer>());
        
//        GraphFrame test = new GraphFrame();
//        test.setVisible(true);
//        test.createChart(new ArrayList<Integer>());
        //ArrayList <Integer> list1 = new ArrayList<Integer>();
        //frame.createChart(list1);
//        lowerPanel.setLayout(new BorderLayout());
//        lowerPanel.removeAll();
//        lowerPanel.updateUI();
//        GraphCreator d = new LineGraphCreator();
//        ArrayList <Integer> list = new ArrayList<Integer>();
//        lowerPanel.add(BorderLayout.CENTER,d.createChart(list)); 
//        lowerPanel.repaint();
//        lowerPanel.revalidate();
        
        //lowerPanel.add(d.createChart(list));
        
//        
//        if(bidPriceCheckBox.isSelected()){
//            //new BidPriceDecorator(panel).decoratePanel();
//            GridBagConstraints c = new GridBagConstraints();
//            c.fill = GridBagConstraints.VERTICAL;
//
//            JLabel label = new JLabel("Button 2");
//            c.weightx = 0;
//        
//            c.fill = GridBagConstraints.VERTICAL;
//            c.gridx = 0;
//            c.gridy = 1;
//            lowerPanel.add(label, c);
//        }
//        
//        if(statusCheckBox.isSelected()){
//            GridBagConstraints c = new GridBagConstraints();
//            c.fill = GridBagConstraints.VERTICAL;
//
//            JLabel label = new JLabel("Button 3");
//            c.weightx = 0;
//        
//            c.fill = GridBagConstraints.VERTICAL;
//            c.gridx = 0;
//            c.gridy = 2;
//            lowerPanel.add(label, c);
//        }
//        
//        JButton button;
//        //lowerPanel.setLayout(new GridBagLayout());
//        GridBagConstraints c = new GridBagConstraints();
//        c.fill = GridBagConstraints.VERTICAL;
//
//        button = new JButton("Button 1");
//        c.weightx = 0;
//        
//        c.fill = GridBagConstraints.VERTICAL;
//        c.gridx = 0;
//        c.gridy = 0;
//        lowerPanel.add(button, c);
// 
//        button = new JButton("Button 2");
//        c.fill = GridBagConstraints.VERTICAL;
//        c.weightx = 0.5;
//        c.gridx = 1;
//        c.gridy = 0;
//        lowerPanel.add(button, c);
//        //add(panel);
//        
//        button = new JButton("Button 3");
//        c.fill = GridBagConstraints.VERTICAL;
//        c.weightx = 0.5;
//        c.gridx = 2;
//        c.gridy = 0;
//        lowerPanel.add(button, c);
        lowerPanel.revalidate();
//        decoratedPanel.removeAll();
//        decoratedPanel.setLayout(new BoxLayout(decoratedPanel, BoxLayout.Y_AXIS));
//        if(currentPriceCheckBox.isSelected()){
//            JLabel currentPriceLabel = new JLabel("Current Price :");
//            decoratedPanel.add(currentPriceLabel);
//        }
//        
//        if(bidPriceCheckBox.isSelected()){
//            JLabel bidPriceLabel = new JLabel("Current Bid Price :");
//            decoratedPanel.add(bidPriceLabel);
//        }
//        
//        if(statusCheckBox.isSelected()){
//            JLabel status = new JLabel("Status :");
//            decoratedPanel.add(status);
//        }
//        
//        if(barGraphCheckBox.isSelected()){
//            JLabel barGraphLabel = new JLabel("Bar Graph :");
//            decoratedPanel.add(barGraphLabel);
//        }
//        
//        if(lineGraphCheckBox.isSelected()){
//            JLabel lineGraphLabel = new JLabel("Line Graph :");
//            decoratedPanel.add(lineGraphLabel);
//        }
//        
//        decoratedPanel.repaint();
//        decoratedPanel.revalidate();
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomObserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomObserver().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox availableStockComboBox;
    private javax.swing.JCheckBox barGraphCheckBox;
    private javax.swing.JCheckBox bidPriceCheckBox;
    private javax.swing.JCheckBox currentPriceCheckBox;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox lineGraphCheckBox;
    private javax.swing.JPanel lowerPanel;
    private javax.swing.JCheckBox statusCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Subject stock) {
        Stock s = (Stock) stock;
        
        if(jLabel2.isVisible()){
            jLabel4.setText(Integer.toString(s.getCurrentPrice()));
        }
        
        if(jLabel4.isVisible()){
            jLabel5.setText(Integer.toString(s.getBidPrice()));
        }
    }
}
