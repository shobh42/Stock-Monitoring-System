
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shobhit
 */
public class StockMonitoringSystemMainPanel extends javax.swing.JFrame{

    private Portfolio portfolio;
    private DefaultTableModelObserver stockMainTableModel;
    Communicator communicator;

    /**
     * Creates new form StockMonitoringSystemMainPanel
     */
    public StockMonitoringSystemMainPanel(){
        
    }
    
    public StockMonitoringSystemMainPanel(Portfolio portfolio) {
        initComponents();
        this.portfolio = portfolio;
        this.communicator = new Communicator(portfolio);
        stockMainTableModel = new DefaultTableModelObserver();
        populateStockTableAndFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        stockMainTable = new javax.swing.JTable();
        createObserverJButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        simulatorStoppedLabel = new javax.swing.JLabel();
        createCustomObserverButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startButton.setText("Start ");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stockMainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(stockMainTable);

        createObserverJButton.setText("Create Observer");
        createObserverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createObserverJButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        simulatorStoppedLabel.setText("Simulator Stopped");

        createCustomObserverButton.setText("Create Custom Observer");
        createCustomObserverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCustomObserverButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(simulatorStoppedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(createObserverJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createCustomObserverButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(createObserverJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopButton)
                    .addComponent(createCustomObserverButton)
                    .addComponent(simulatorStoppedLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        new Thread() {
            public void run() {
                communicator.start();
            }
        }.start();
        
        UpdateSimulatorLabel(false);
    }//GEN-LAST:event_startButtonActionPerformed

    private void createObserverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createObserverJButtonActionPerformed
         new ObserverFrame(portfolio).setVisible(true);
    }//GEN-LAST:event_createObserverJButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        communicator.Stop();
        UpdateSimulatorLabel(true);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void createCustomObserverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCustomObserverButtonActionPerformed
        new CustomObserver(portfolio).setVisible(true);
    }//GEN-LAST:event_createCustomObserverButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockMonitoringSystemMainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockMonitoringSystemMainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockMonitoringSystemMainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockMonitoringSystemMainPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockMonitoringSystemMainPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createCustomObserverButton;
    private javax.swing.JButton createObserverJButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel simulatorStoppedLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JTable stockMainTable;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables

    private void populateStockTableAndFrame() {
        stockMainTable.setModel(stockMainTableModel);
        addColumnHeaders();
        addRows();
        setResizable(false);
        UpdateSimulatorLabel(false);
    }

    private void addColumnHeaders() {
        stockMainTableModel.addColumn("Name");
        stockMainTableModel.addColumn("Current Price");
        stockMainTableModel.addColumn("Opening Price");
        stockMainTableModel.addColumn("Closing Price");
        stockMainTableModel.addColumn("Ask Price");
        stockMainTableModel.addColumn("Status");
        stockMainTableModel.addColumn("Bid Price");
        stockMainTableModel.addColumn("Volume");
        stockMainTableModel.addColumn("Ten Day Volume");
    }

    private void addRows() {
        Set<String> symbols = portfolio.getSymbols(); 
        for(String s : symbols){
            String symbol = s.split(",")[0];
            stockMainTableModel.addRow(new Object[]{symbol, "", "", ""});
            Stock stock = portfolio.getStock(symbol);
            stock.addObserver(stockMainTableModel);
        } 
    }

    private void UpdateSimulatorLabel(boolean flag) {
        simulatorStoppedLabel.setVisible(flag);
    }
}
